// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _420DA3_A24_Exemple_Enseignant.DataAccess.Contexts;

#nullable disable

namespace _420DA3_A24_Exemple_Enseignant.Migrations
{
    [DbContext(typeof(ExempleDbContext))]
    partial class ExempleDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("_420DA3_A24_Exemple_Enseignant.Business.Domain.Medecin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("DateCreated")
                        .HasColumnOrder(4)
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime?>("DateDeleted")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("DateDeleted")
                        .HasColumnOrder(6);

                    b.Property<DateTime?>("DateModified")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("DateModified")
                        .HasColumnOrder(5);

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("Nom")
                        .HasColumnOrder(1);

                    b.Property<string>("NumLicenseMedicale")
                        .IsRequired()
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("NumLicenseMedicale")
                        .HasColumnOrder(3);

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("Prenom")
                        .HasColumnOrder(2);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion")
                        .HasColumnName("RowVersion")
                        .HasColumnOrder(7);

                    b.HasKey("Id");

                    b.ToTable("Medecins", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(1, 1, 1, 5, 0, 0, 0, DateTimeKind.Utc),
                            Nom = "Jones",
                            NumLicenseMedicale = "1234567",
                            Prenom = "Indianna"
                        });
                });

            modelBuilder.Entity("_420DA3_A24_Exemple_Enseignant.Business.Domain.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("DateCreated")
                        .HasColumnOrder(4)
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime?>("DateDeleted")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("DateDeleted")
                        .HasColumnOrder(6);

                    b.Property<DateTime?>("DateModified")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("DateModified")
                        .HasColumnOrder(5);

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("Nom")
                        .HasColumnOrder(1);

                    b.Property<string>("NumAssMaladie")
                        .IsRequired()
                        .HasColumnType("nvarchar(12)")
                        .HasColumnName("NumAssMaladie")
                        .HasColumnOrder(3);

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("Prenom")
                        .HasColumnOrder(2);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion")
                        .HasColumnName("RowVersion")
                        .HasColumnOrder(7);

                    b.HasKey("Id");

                    b.ToTable("Patients", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(1, 1, 1, 5, 0, 0, 0, DateTimeKind.Utc),
                            Nom = "Doe",
                            NumAssMaladie = "DOEJ12345678",
                            Prenom = "John"
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(1, 1, 1, 5, 0, 0, 0, DateTimeKind.Utc),
                            Nom = "Doe",
                            NumAssMaladie = "DOEJ87654321",
                            Prenom = "Jane"
                        });
                });

            modelBuilder.Entity("_420DA3_A24_Exemple_Enseignant.Business.Domain.RendezVous", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("DateCreated")
                        .HasColumnOrder(4)
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime?>("DateDeleted")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("DateDeleted")
                        .HasColumnOrder(6);

                    b.Property<DateTime?>("DateModified")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("DateModified")
                        .HasColumnOrder(5);

                    b.Property<DateTime>("DateRendezVous")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("DateRendezVous")
                        .HasColumnOrder(1);

                    b.Property<int>("MedecinId")
                        .HasColumnType("int")
                        .HasColumnName("MedecinId")
                        .HasColumnOrder(3);

                    b.Property<int>("PatientId")
                        .HasColumnType("int")
                        .HasColumnName("PatientId")
                        .HasColumnOrder(2);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion")
                        .HasColumnName("RowVersion")
                        .HasColumnOrder(7);

                    b.HasKey("Id");

                    b.HasIndex("MedecinId");

                    b.HasIndex("PatientId");

                    b.ToTable("RendezVous", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(1, 1, 1, 5, 0, 0, 0, DateTimeKind.Utc),
                            DateRendezVous = new DateTime(2024, 10, 14, 16, 59, 5, 926, DateTimeKind.Utc).AddTicks(9540),
                            MedecinId = 1,
                            PatientId = 1
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(1, 1, 1, 5, 0, 0, 0, DateTimeKind.Utc),
                            DateRendezVous = new DateTime(2024, 10, 14, 16, 59, 5, 926, DateTimeKind.Utc).AddTicks(9570),
                            MedecinId = 1,
                            PatientId = 2
                        });
                });

            modelBuilder.Entity("_420DA3_A24_Exemple_Enseignant.Business.Domain.RendezVous", b =>
                {
                    b.HasOne("_420DA3_A24_Exemple_Enseignant.Business.Domain.Medecin", "Medecin")
                        .WithMany("RendezVous")
                        .HasForeignKey("MedecinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_420DA3_A24_Exemple_Enseignant.Business.Domain.Patient", "Patient")
                        .WithMany("RendezVous")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medecin");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("_420DA3_A24_Exemple_Enseignant.Business.Domain.Medecin", b =>
                {
                    b.Navigation("RendezVous");
                });

            modelBuilder.Entity("_420DA3_A24_Exemple_Enseignant.Business.Domain.Patient", b =>
                {
                    b.Navigation("RendezVous");
                });
#pragma warning restore 612, 618
        }
    }
}
